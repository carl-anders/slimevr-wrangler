name: Build
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Enable static CRT linkage
      run: |
        mkdir .cargo
        echo '[target.x86_64-pc-windows-msvc]' >> .cargo/config
        echo 'rustflags = ["-Ctarget-feature=+crt-static"]' >> .cargo/config
    - name: Cache cargo dependencies
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "wrangler"
    - name: Build windows binary
      run: cargo build --verbose --release
    - name: Archive windows binary
      uses: actions/upload-artifact@v4
      with:
        name: slimevr-wrangler.exe 
        path: target/release/slimevr-wrangler.exe 

  build_macos:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache cargo dependencies
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "wrangler"
    - name: Build mac binary
      run: cargo build --verbose --release
    - name: Open binary via double-click
      run: chmod +x target/release/slimevr-wrangler
    - name: Archive mac binary
      uses: actions/upload-artifact@v4
      with:
        name: slimevr-wrangler-macos
        path: target/release/slimevr-wrangler

  build_macos_old:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v3
    - name: Cache cargo dependencies
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "wrangler-old"
    - name: Build mac binary old
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.14
      run: cargo build --verbose --release
    - name: Open binary via double-click
      run: chmod +x target/release/slimevr-wrangler
    - name: Archive mac binary
      uses: actions/upload-artifact@v4
      with:
        name: slimevr-wrangler-macos-old
        path: target/release/slimevr-wrangler

  build_ubuntu:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        export DEBIAN_FRONTED=noninteractive
        sudo apt-get -qq update
        sudo apt-get install -y libxkbcommon-dev libudev-dev build-essential linux-tools-common pkg-config libssl-dev libusb-1.0-0-dev clang
    - name: Cache cargo dependencies
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "wrangler"
    - name: Build ubuntu binary
      run: cargo build --verbose --release
    - name: Open binary via double-click
      run: chmod +x target/release/slimevr-wrangler
    - name: Archive ubuntu binary
      uses: actions/upload-artifact@v4
      with:
        name: slimevr-wrangler-ubuntu
        path: target/release/slimevr-wrangler
